package FinalProject;

import java.awt.Canvas;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.ArrayList;

public class CheckerBoard extends Canvas implements MouseListener {
	
	private int mouseX, mouseY;
	private boolean mouseClicked, gameOver;
	private int mouseButton, prevMouseButton;
	private Board board;
	private String turn;
	
	private ArrayList<CheckerPiece> redPieces;
	private ArrayList<CheckerPiece> bluePieces;
	
	private final static int WIDTH=50;
	private final static int HEIGHT=50;
	private final static int SCALE = 50;
	private final static int BOARDSIZE=8;
	
	public CheckerBoard(){
		mouseClicked = false;
		mouseX = mouseY = 0;
		mouseButton = 0;
		prevMouseButton = -1;
		
		addMouseListener(this);
		setBackground(Color.WHITE);
		
		board = new Board(BOARDSIZE,BOARDSIZE);
		
		redPieces = new ArrayList<CheckerPiece>();
		bluePieces = new ArrayList<CheckerPiece>();
		
		turn = "blue";
	}
	
	

	@Override
	public void mouseClicked(MouseEvent e) {
		mouseClicked = true;
		mouseX=e.getX();
		mouseY=e.getY();
		mouseButton = e.getButton();
		markBoard();
		//System.out.println(mouseX);
		repaint();
	}
	
	public void paint(Graphics window){
		window.setColor(Color.white);
		window.fillRect(0,0,640,480);
		window.setFont(new Font("TAHOMA",Font.BOLD,20));
		window.setColor(Color.red);
		window.drawString("Checkers", 600,55);
		
		int rcount = 0;
		int ccount = 0;
		for(int i = 0; i <BOARDSIZE;i++){
			for(int j = 0; j < BOARDSIZE; j++){
				if(rcount%2==0 && ccount%2==0){
					window.setColor(Color.white);
				}
				else if(rcount%2==0 && ccount%2==1){
					window.setColor(Color.black);
				}
				else if(rcount%2==1 && ccount%2==0){
					window.setColor(Color.BLACK);
				}
				else{
					window.setColor(Color.white);
				}
				window.fillRect((i+1)*50,(j+1)*50,WIDTH,HEIGHT);
				window.setColor(Color.black);
				window.drawRect((i+1)*50,(j+1)*50,WIDTH,HEIGHT);
				ccount++;
			}
			rcount++;
		}
		int count = 0;
		for(int i = 0; i<3;i++){
			for(int j = 0; j<8;j++){
				if(i%2==1){
					if(j%2==0){
						bluePieces.add(new CheckerPiece((j+1)*50+5, (i+1)*50+5, Color.blue));
						board.setSpot(i,j, bluePieces.get(count));
						count++;
					}
				}
				else{
					if(j%2==1){
						bluePieces.add(new CheckerPiece((j+1)*50+5, (i+1)*50+5, Color.blue));
						board.setSpot(i,j, bluePieces.get(count));
						count++;
					}
				}
			}
		}
		count = 0;
		for(int i = 5; i<8;i++){
			for(int j = 0; j<8;j++){
				if(i%2==1){
					if(j%2==0){
						redPieces.add(new CheckerPiece((j+1)*50+5, (i+1)*50+5, Color.red));
						board.setSpot(i,j, redPieces.get(count));
						count++;
					}
				}
				else{
					if(j%2==1){
						redPieces.add(new CheckerPiece((j+1)*50+5, (i+1)*50+5, Color.red));
						board.setSpot(i,j, redPieces.get(count));
						count++;
					}
				}
			}
		}
		
		for(int i =0; i<12; i++){
			redPieces.get(i).draw(window);
			bluePieces.get(i).draw(window);
		}
	}
	
	public void markBoard()
	{
		
		if(mouseX>=50&&mouseX<=450&&mouseY>=50&&mouseY<=450)
		{
			int r = mouseY/50-1;
			int c = mouseX/50-1;
			CheckerPiece piece = (CheckerPiece)board.getSpot(r,c);
			boolean colored = true;
			if(mouseButton==MouseEvent.BUTTON1&&turn.equals("blue"))		//left mouse button pressed
			{
				if(piece==null){
					for(CheckerPiece p:bluePieces){
						if(p.getClicked()){
							int nr = p.getY()/50-1;
							int nc = p.getX()/50-1;
							//System.out.println(r);
							//System.out.println(c);
							
							if(nr-r==-1){
								if(nc-c==1){
									int x = p.getX();
									int y = p.getY();
									movePiece(x+50, y+50, r, c, nr, nc, p);
								}
								else if(nc-c==-1){
									int x = p.getX();
									int y = p.getY();
									movePiece(x-50, y+50, r, c, nr, nc, p);
								}
							}
						}
					}
				}
				else if(piece.getClicked()){
					piece.setClicked(false);
				}
				else if(!piece.getClicked()){
					
					for(CheckerPiece p:bluePieces){
						if(p.getClicked()){
							colored = false;
						}
					}
					if(colored){
						if(piece.getColorFill().equals(Color.blue)){
							piece.setClicked(true);
							System.out.println(r);
							System.out.println(c);
						}
					}
				}
					
			}		
			
			//if BUTTON3 was pressed and BUTTON3 was not pressed last mouse press
			if(mouseButton==MouseEvent.BUTTON3&&turn.equals("red")){
				if(piece==null){
					for(CheckerPiece p:redPieces){
						if(p.getClicked()){
							int nr = p.getY()/50-1;
							int nc = p.getX()/50-1;
							System.out.println(r);
							System.out.println(c);
							//System.out.println(nc-c);
							//System.out.println(nr-r);
							if(nc-c==-1){
								if(nr-r==1){
									int x = p.getX();
									int y = p.getY();
									movePiece(x+50, y-50, r, c, nr, nc, p);
									
								}
								else{
									int x = p.getX();
									int y = p.getY();
									movePiece(x-50, y-50, r, c, nr, nc, p);
								}
								
							}
						}
					}
				}
				else if(piece.getClicked()){
					piece.setClicked(false);
				}
				else if(!piece.getClicked()){
					
					for(CheckerPiece p:redPieces){
						if(p.getClicked()){
							colored = false;
						}
					}
					if(colored){
						if(piece.getColorFill().equals(Color.red)){
							piece.setClicked(true);
							System.out.println(r);
							System.out.println(c);
						}
					}
				}
			}
		}
	}
	
	public void takePiece(CheckerPiece piece){
		
	}
	
	public void movePiece(int x, int y, int r, int c, int nr, int nc, CheckerPiece p){
		p.setX(x);
		p.setY(y);
		board.setSpot(r,c,p);
		board.setSpot(nr, nc, null);
		p.setClicked(false);
		if(turn.equals("red"))
			turn = "blue";
		else
			turn = "red";
	}
	
	@Override
	public void mouseEntered(MouseEvent e) {
		// TODO Auto-generated method stub
	}

	@Override
	public void mouseExited(MouseEvent e) {
		// TODO Auto-generated method stub
	}

	@Override
	public void mousePressed(MouseEvent e) {
		// TODO Auto-generated method stub
	}

	@Override
	public void mouseReleased(MouseEvent e) {
		// TODO Auto-generated method stub
	}

}
